package test.java;

import main.java.Pen;
import org.junit.Test;

import static junit.framework.TestCase.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class PenTest {
    @Test
    public void toStringShouldReturnBrandColorQuantity (){
        Pen pen = new Pen("Parker", 5, "black");
        assertEquals("Parker 5 black", pen.toString());
    }

    @Test
    public void equalsShouldReturnTrueForEqualElements (){
        Pen pen1 = new Pen("Parker", 5, "black");
        Pen pen2 = new Pen("Parker", 5, "black");
        assertTrue(pen1.equals(pen2));
    }

    @Test
    public void equalsShouldReturnFalseForNonequalsElements (){
        Pen pen1 = new Pen("Parker", 5, "black");
        Pen pen2 = new Pen("Bic", 5, "black");
        assertFalse(pen1.equals(pen2));
    }

    @Test
    public void equalsShouldReturnFalseForDifferentElements (){
        Pen pen1 = new Pen("Parker", 5, "black");
        Pen pen2 = new Pen("Bic", 1, "blue");
        assertFalse(pen1.equals(pen2));
    }

    @Test
    public void hashCodeShouldReturnTrueForEqualElements (){
        Pen pen1 = new Pen("Parker", 5, "black");
        Pen pen2 = new Pen("Parker", 5, "black");
        assertTrue(pen1.hashCode()==(pen2.hashCode()));
    }

    @Test
    public void hashCodeShouldReturnFalseForNonequalElements (){
        Pen pen1 = new Pen("Parker", 5, "black");
        Pen pen2 = new Pen("Bic", 1, "blue");
        assertFalse(pen1.hashCode()==(pen2.hashCode()));
    }
}
